var site = {
    $window: $(window),
    $html: $("html"),
    $body: $("body"),
    ww: $(window).width(),
    platform: function () {
        var a = this,
            b = navigator.userAgent.toLowerCase();
        $.support.touch = "ontouchend" in document;
        var c = window.SVGAngle ? !0 : !1,
            d = document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? !0 : !1,
            e = /gecko/i.test(b) && /rv:1.9/i.test(b) ? !0 : !1;
        a.touch = $.support.touch ? !0 : !1, a.ltie9 = $.support.leadingWhitespace ? !1 : !0, a.lteie9 = "undefined" == typeof window.atob ? !0 : !1, (!c || !d || a.lteie9 || e) && a.$html.addClass("no_svg"), a.touch ? a.$html.addClass("touch") : a.$html.addClass("mouse"), a.lteie9 && a.$html.addClass("ie ie9"), a.ltie9 && a.$html.addClass("ie suck-mode")
    },
    header: {
        init: function () {
            var a = this;
            a.search.init(), a.mobileNav.init(), site.ww <= 640 && a.mobileSubNav.init()
        },
        mobileNav: {
            init: function () {
                var a = this;
                a.$hamburger = $("#Hamburger, #FixedHamburger"), a.$mobileNav = $("#MobileNav"), a.$menuItems = $("#MobileNav ul").children(), a.$back = $(), a.addUI(), a.bindHandlers(), a.open = !1
            },
            addUI: function () {
                var a = this;
                a.$menuItems.each(function () {
                    var b = $(this),
                        c = b.find(".sub-menu"),
                        d = b.children("a").text();
                    if (c.length) {
                        $('<div class="toggle"/>').insertBefore(c), b.addClass("sub-trigger").children("a").attr("href", "javascript:void(0)");
                        var e = $('<li class="heading"><span>' + d + '</span><div class="toggle"/></li>').prependTo(c);
                        a.$back = a.$back.add(e)
                    }
                }), a.$triggers = $(".sub-trigger")
            },
            bindHandlers: function () {
                var a = this;
                a.$hamburger.on("click", function () {
                    site.$body.hasClass("aside") ? (site.$body.removeClass("aside"), a.open = !1, $("#Home").length && (site.home.heroCarousel.$carousel.easyFader("resume"), site.home.$membersCarousel.easyFader("resume"))) : ($("#Home").length && (site.home.heroCarousel.$carousel.easyFader("pause"), site.home.$membersCarousel.easyFader("pause")), site.$body.addClass("aside"), a.open = !0)
                }), site.$window.resize(function () {
                    a.open && site.$body.removeClass("aside")
                }), a.$triggers.on("click", function () {
                    var a = $(this);
                    a.hasClass("open") ? a.removeClass("open") : a.addClass("open")
                }), site.$body.on("touchmove", function (b) {
                    a.open && b.preventDefault()
                }), a.$mobileNav.find(".sub-menu a").on("click", function (a) {
                    var b = this.href;
                    a.preventDefault(), site.$body.removeClass("aside");
                    setTimeout(function () {
                        window.location = b
                    }, 200)
                })
            }
        },
        mobileSubNav: {
            init: function () {
                var a = this;
                a.$subnav = $("#SubNav"), a.$slider = a.$subnav.find("ul"), a.sliderW = a.$slider.width(), a.swipe = !1, a.sliderOffset = parseInt(a.$slider.css("left")), a.maxSliderOffset = site.ww - a.sliderW, a.prePos(), a.bindHandlers()
            },
            bindHandlers: function () {
                var a = this;
                site.$window.resize(function () {
                    site.ww = site.$window.width(), a.sliderW = a.$slider.width(), a.maxSliderOffset = site.ww - a.sliderW
                }), site.$body.bind("touchmove", function (a) {
                    $target = $(a.target), $target.closest(".sub-nav").length && a.preventDefault()
                }), a.$slider.find("li").bind("mousedown touchstart", function (b) {
                    site.touch ? b = a.getEvent(b) : b.preventDefault(), a.swipe = !0, a.startX = b.pageX
                }), site.$body.bind("mousemove touchmove", function (b) {
                    if (a.swipe) {
                        if (a.sliderW <= site.ww) return a.menuSwipe = !1, !1;
                        site.touch && (b = a.getEvent(b));
                        var c = b.pageX,
                            d = c - a.startX,
                            e = a.sliderOffset + d;
                        a.$subnav.removeClass("max-left max-right"), e > a.maxSliderOffset && 20 > e ? a.$slider.css("left", e + "px") : e <= a.maxSliderOffset ? (a.$subnav.addClass("max-right"), a.$slider.css("left", a.maxSliderOffset + "px")) : e >= 20 && (a.$subnav.addClass("max-left"), a.$slider.css("left", "20px"))
                    }
                }), site.$window.bind("mouseup touchend", function (b) {
                    a.swipe && (site.touch && (b = a.getEvent(b)), a.sliderOffset = parseInt(a.$slider.css("left")), a.swipe = !1)
                })
            },
            getEvent: function (a) {
                var b = a.originalEvent.touches[0] || a.originalEvent.changedTouches[0];
                return b
            },
            prePos: function () {
                var a = this;
                if (a.$active = a.$slider.find(".current-menu-item"), a.$active.index() > 0) {
                    var b = a.$active.width() / 2,
                        c = a.$active.offset().left + b,
                        d = site.ww / 2 + 35,
                        e = c - d;
                    a.$subnav.removeClass("max-left max-right"), e < -1 * a.maxSliderOffset ? a.$slider.css("left", "-" + e + "px") : (a.$subnav.addClass("max-right"), a.$slider.css("left", a.maxSliderOffset + "px")), a.sliderOffset = parseInt(a.$slider.css("left"))
                }
            }
        },
        search: {
            open: !1,
            init: function () {
                var a = this;
                a.$searchButton = $("#SearchButton"), a.$searchWrapper = a.$searchButton.closest(".search"), a.$form = a.$searchWrapper.find("form"), a.$input = a.$form.find("input"), a.bindHandlers()
            },
            bindHandlers: function () {
                var a = this;
                a.$searchButton.on("click", function (b) {
                    $(this);
                    a.$searchWrapper.hasClass("open") ? a.$searchWrapper.hasClass("open") && b.target == this && (a.open = !1, a.$searchWrapper.removeClass("open"), a.$input.blur()) : (a.open = !0, a.$searchWrapper.addClass("open"), a.$input.focus())
                }), $("body").on("click", function (b) {
                    var c = $(b.target);
                    !c.closest(a.$searchWrapper).length && c[0] != a.$searchWrapper[0] && a.open && (a.$searchWrapper.removeClass("open"), a.$form[0].reset())
                })
            },
            submit: function () {}
        }
    },
    home: {
        init: function () {
            var a = this;
            a.$membersCarousel = $("#MembersCarousel"), !a.heroCarousel.initialized && carouselLoaded && a.heroCarousel.init(), a.$membersCarousel.easyFader({
                effect: "carousel",
                autoCycle: !0,
                slideDur: 1800,
                effectDur: 900,
                includeMargin: !0
            }), site.touch && site.helpers.bindSwipe(a.$membersCarousel), a.quotes.init()
        },
        heroCarousel: {
            initialized: !1,
            zone: null,
            init: function () {
                var a = this;
                a.$carousel = $("#HomeCarousel"), a.$caption = a.$carousel.find(".caption"), a.$carousel.easyFader({
                    slideDur: 10000,
                    effectDur: 1100,
                    effect: "carousel",
                    onChangeStart: function () {
                        a.$caption.removeClass("show")
                    },
                    onChangeEnd: function (b) {
                        a.renderCaptions(b)
                    }
                }), a.$carousel.addClass("loaded"), a.renderCaptions(a.$carousel.find(".slide").eq(0)), site.touch && site.helpers.bindSwipe(a.$carousel), a.initialized = !0
            },
            renderCaptions: function (a) {
                var b = this;
                captionData = a.attr("data-slide"), captionJSON = captionData ? $.parseJSON(captionData) : !1, captionJSON && (b.$caption.find("h2").html(captionJSON.title), b.$caption.attr("href", captionJSON.href).find(".read-more").html(captionJSON.linkTitle), captionJSON.title && b.$caption.removeClass(b.zone).addClass("show " + captionJSON.zone).parent().removeClass("left right center").addClass(captionJSON.position), b.zone = captionJSON.zone)
            }
        },
        quotes: {
            init: function () {
                var a = this;
                a.$quotes = $("#Quotes"), a.$quotes.easyFader({
                    effectDur: 1200
                })
            }
        }
    },
    events: {
        filter: "all",
        init: function () {
            var a = this;
            a.$eventsList = $("#EventsList"), a.$featuredEvent = $("#FeaturedEvent"), a.$filters = $("#EventFilters"), a.$loadMore = $("#LoadMore"), a.showOnLoad = a.$eventsList.attr("data-category") || "all", a.$featuredEvent.length && a.$featuredEvent.mixitup({
                layoutMode: "list",
                effects: ["fade"],
                filterSelector: ".kunkalabs"
            }), a.$eventsList.mixitup({
                layoutMode: "list",
                effects: ["fade"],
                minHeight: 260,
                showOnLoad: a.showOnLoad,
                onMixLoad: function () {
                    a.findVisible()
                },
                onMixEnd: function (b) {
                    a.findVisible(), a.filter = b.filter
                }
            }), a.filter = a.showOnLoad, a.$filters.length && !site.touch && (a.filtersAffixed = !1, a.affixFilters()), a.$loadMore.length && a.ajaxPosts.init()
        },
        affixFilters: function () {
            var a = this;
            a.getFiltersPos(), a.scrollPosY = site.$window.scrollTop(), a.checkScroll(), site.$window.resize(function () {
                a.filtersAffixed || a.getFiltersPos()
            }), site.$window.scroll(function () {
                a.scrollPosY = site.$window.scrollTop(), a.checkScroll()
            })
        },
        checkScroll: function () {
            var a = this,
                b = $(".events-list").first();
            if (a.scrollPosY >= a.filtersPosY) {
                var c = a.$filters.height();
                b.css("margin-top", c + "px"), site.$body.addClass("affix-filters"), a.filtersAffixed = !0
            } else a.scrollPosY < a.filtersPosY && a.filtersAffixed && (site.$body.removeClass("affix-filters"), b.removeAttr("style"), a.filtersAffixed = !1)
        },
        getFiltersPos: function () {
            var a = this;
            a.filtersPosY = a.$filters.offset().top
        },
        findVisible: function () {
            var a = this;
            a.$eventsList.find(".mix").removeClass("visible").filter(":visible").addClass("visible")
        },
        ajaxPosts: {
            page: 1,
            loading: !1,
            startdate: !1,
            datePickerOpen: !1,
            init: function () {
                var a = this;
                a.$loadMore = $("#LoadMore"), a.$datePicker = $("#DatePicker"), a.$pickADate = $("#PickADate"), a.$showingFrom = $("#ShowingFrom"), a.$startDate = $("#StartDate"), a.bindHandlers()
            },
            bindHandlers: function () {
                var a = this;
                a.$loadMore.on("click", function () {
                    var b = {
                        action: "nygc_ajax_posts",
                        type: a.$loadMore.hasClass("past") ? "past" : "upcoming",
                        number_of_posts: 10,
                        paged: a.page + 1,
                        post_type: a.$loadMore.attr("data-posttype") || "events",
                        category: a.$loadMore.attr("data-cat") || site.events.filter,
                        nonce: nygcAjaxPosts.ajaxNonce
                    };
                    a.startdate && (b.startdate = a.startdate), site.events.$eventsList.addClass("loading-more"), a.requestEvents(b)
                }), a.$pickADate.on("click", function (b) {
                    a.datePickerOpen ? b.target == this && (a.datePickerOpen = !1, a.$datePicker.fadeOut()) : (a.datePickerOpen = !0, a.$datePicker.fadeIn())
                }), site.$body.on("click", function (b) {
                    !a.datePickerOpen || $(b.target).closest(".pick-a-date").length || $(b.target).closest(".ui-datepicker-header").length || (a.datePickerOpen = !1, a.$datePicker.fadeOut())
                }), a.$datePicker.datepicker({
                    onSelect: function (b, c) {
                        var d = site.events.filter,
                            e = new Date(b),
                            f = e.yyyymmdd(),
                            g = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                            h = g[e.getMonth()] + " " + e.getDate() + ", " + c.selectedYear;
                        a.datePickerOpen = !1, a.$datePicker.fadeOut(), a.startdate = f, a.page = 1;
                        var i = {
                            action: "nygc_ajax_posts",
                            startdate: a.startdate,
                            type: "upcoming",
                            number_of_posts: 10,
                            paged: a.page,
                            post_type: "events",
                            category: "all",
                            nonce: nygcAjaxPosts.ajaxNonce
                        };
                        site.events.$eventsList[0].config.onMixEnd = function () {
                            site.events.filter = d, site.events.$eventsList.find(".mix").remove(), site.events.$eventsList.mixitup("remix"), a.$showingFrom.find("span").text(h), a.$showingFrom.slideDown(), a.requestEvents(i), site.events.$eventsList[0].config.onMixEnd = function (a) {
                                site.events.findVisible(), site.events.filter = a.filter
                            }
                        }, site.events.$eventsList.mixitup("filter", "none"), site.events.$featuredEvent.mixitup("filter", "none"), a.$showingFrom.slideUp(), site.events.$eventsList.addClass("loading-from-date")
                    }
                })
            },
            requestEvents: function (a) {
                var b = this;
                b.loading || $(this).hasClass("no-more") || (b.loading = !0, $.post(nygcAjaxPosts.ajaxURL, a, function (c) {
                    c ? ($.each(c, function () {
                        if ("blog" == this.type) {
                            var a = this;
                            $('<a href="' + a.permalink + '" class="block-link mix event"> 										<div class="image align-' + a.imageAlign + '"> 											' + a.image + ' 										</div> 										<div class="content"> 											<h5>' + a.categoryName + "</h5> 											<h3>" + a.title + '</h3> 											<div class="event-meta"> 												<time>' + a.date + '</time> 												<div class="read-more">Learn more</div> 											</div> 										</div> 									</a> ').appendTo(site.events.$eventsList)
                        } else {
                            var b = this;
                            b.image = b.image ? '<img src="' + b.image + '" onload="imgLoaded(this, true)"/>' : "", b.series = b.series ? '<h5 class="series">' + b.series + "</h5>" : "", b.categoryName = b.categoryName ? "<h5>" + b.categoryName + "</h5>" : "", $('<a href="' + b.permalink + '" class="mix event ' + b.categorySlug + '"> 										<div class="image align-' + b.imageAlign + '"> 											' + b.image + ' 											<div class="date"> 												<span>' + b.date1 + '</span> 												<span class="lrg">' + b.date2 + '</span> 											</div> 										</div> 										<div class="content"> 											' + b.categoryName + " 											" + b.series + " 											<h3>" + b.title + '</h3> 											<div class="event-meta"> 												<p>' + b.location + "</p> 												<time>" + b.time + '</time> 												<div class="read-more">Learn more</div> 											</div> 										</div> 									</a> ').appendTo(site.events.$eventsList)
                        }
                    }), site.events.$eventsList.mixitup("remix", site.events.filter), b.page++, c.length < a.number_of_posts && b.noMore(a.type, a.post_type)) : b.noMore(a.type, a.post_type), b.loading = !1, site.events.$eventsList.removeClass("loading-more loading-from-date")
                }, "json"))
            },
            noMore: function (a, b) {
                var c = this;
                verbage = "events" == b ? "upcoming" == a ? "No More Upcoming Events" : "No Older Events" : "No Older Posts", c.$loadMore.addClass("no-more").find("span").text(verbage)
            }
        }
    },
    contactForm: {
        sending: !1,
        init: function () {
            var a = this;
            a.$contactForm = $("#ContactForm"), a.$checkSequencing = $("#CheckSequencing"), a.$seqOps = $("#SequencingOptions"), a.$checkOther = $("#CheckOther"), a.$otherReason = $("#OtherReason"), a.$submit = $("#Submit"), a.$thankYou = $("#ThankYou"), a.$reasons = $("#Reasons"), a.$sendCopyTo = $("#SendCopyTo"), a.bindHandlers(), a.validationInit()
        },
        bindHandlers: function () {
            var a = this;
            a.$checkOther.on("change", function () {
                var b = $(this);
                b.is(":checked") ? a.$otherReason.addClass("show") : a.$otherReason.removeClass("show")
            }), a.$checkSequencing.on("change", function () {
                var b = $(this);
                b.is(":checked") ? a.$seqOps.addClass("show") : a.$seqOps.removeClass("show")
            }), a.$submit.on("click", function () {
                a.sending || a.submit()
            })
        },
        getEmails: function () {
            var a = this,
                b = "",
                zy = "@nygenome.org";
            return a.$reasons.find("input").each(function () {
                var a = $(this);
                if (a.is(":checked")) {
                    var c = a.attr("data-copyto");
                    if(c.indexOf(",") != -1){
                    	var emails = c.split(',');

						for (var i = 0; i < emails.length; i++) {				          
				          d = emails[i] + zy;
				          b.indexOf(c) < 0 && (b += c.length ? ", " + d : "")
				          console.log(d);
				        }
                    }else{                    	
                    	d = c + zy;
                    	b.indexOf(c) < 0 && (b += c.length ? ", " + d : "")
                    	console.log(d);
                    }                    
                        
                    //b.indexOf(c) < 0 && (b += c.length ? ", " + d : "")
                }
            }), b = b.substring(2)
        },
        rules: {
            "input_12.3": {
                required: !0
            },
            "input_12.6": {
                required: !0
            },
            "input_2": {
                required: !0
            },
            input_3: {
                required: !0,
                email: !0
            },
            input_4: {
                required: !0
            },
            input_8: {
                required: !0
            }
        },
        validationInit: function () {
            var a = this;
            a.$contactForm.validate({
                invalidHandler: function (a, b) {
                    b.numberOfInvalids()
                },
                errorClass: "invalid",
                errorElement: "label",
                errorPlacement: function (a, b) {
                    var c = $(b).closest(".field");
                    $(a).appendTo(c)
                },
                rules: a.rules
            })
        },
        validate: function () {
            var a = this;
            return a.$contactForm.valid()
        },
        submit: function () {
            var a = this,
                b = a.getEmails();
            a.$sendCopyTo.val(b);
            var c = a.$contactForm.serialize();
            if (a.validate()) {
                a.sending = !0, "undefined" != typeof _gaq && site.analytics.events.formSubmission(c), a.$contactForm.addClass("loading");
                var d = a.$contactForm.offset().top;
                $.ajax({
                    type: "POST",
                    url: a.$contactForm.attr("data-action"),
                    data: c,
                    success: function () {
                        $("body, html").animate({
                            scrollTop: d - 200
                        }, 300, function () {
                            a.$contactForm.fadeOut("slow", function () {
                                a.$thankYou.fadeIn()
                            })
                        }), a.$contactForm[0].reset
                    }
                })
            }
        }
    },
    helpers: {
        highlightActive: function () {
            var a = "undefined" == typeof peopleGroup ? blogPost : peopleGroup,
                b = a.name,
                c = $("#SubNav").find("span");
            c.each(function () {
                this.innerHTML == b && $(this).closest("li").addClass("current-menu-item")
            })
        },
        bindSwipe: function (a) {
            var b, c, d, e, f, g = !1,
                h = !1,
                i = !1,
                j = function (a) {
                    var b = a.originalEvent.touches[0] || a.originalEvent.changedTouches[0];
                    return b
                };
            a.on("touchstart", function (a) {
                g = !0, a = j(a), b = a.pageX, c = a.pageY
            }), site.$body.on("touchmove", function (a) {
                if (g) {
                    var k = j(a);
                    d = k.pageX, i || (e = k.pageY, i = !0, travelY = e - c, f = d - b, travelY = -travelY > 0 ? -travelY : travelY, f = -f > 0 ? -f : f, angle = travelY / f, 1 > angle && (a.preventDefault(), h = !0))
                }
            }), site.$body.on("touchend", function () {
                h && (g = !1, h = !1, f = d - b, f > 15 ? a.easyFader("changeSlides", "prev") : 15 > f && a.easyFader("changeSlides", "next")), i = !1
            })
        }
    },
    analytics: {
        init: function () {
            var a = this;
            site.mobileLinks.active || a.bindHandlers()
        },
        events: {
            carouselClick: function (a) {
                var b = a.href,
                    c = $(a).find("h2").text();
                _gaq.push(["_trackEvent", "Home Page Slide", "Click", c]), setTimeout('document.location = "' + b + '"', 100)
            },
            ctaClick: function (a) {
                var b = a.href,
                    c = $(a).find("h3").text();
                _gaq.push(["_trackEvent", "CTA", "Click", c]), setTimeout('document.location = "' + b + '"', 100)
            },
            formSubmission: function (a) {
                _gaq.push(["_trackEvent", "Contact Form", "Submission", a])
            },
            videoPlay: function (a) {
                _gaq.push(["_trackEvent", "Video", "Play", a])
            },
            timelineClick: function (a) {
                var b = a.href,
                    c = $(a).closest(".entry"),
                    d = c.find("h3").text().replace(/\s{2,}/g, " ");
                _gaq.push(["_trackEvent", "Timeline Entry", "Click", d]), setTimeout('document.location = "' + b + '"', 100)
            },
            search: function (a) {
                var b = a.children[0].value;
                return "undefined" != typeof _gaq ? (_gaq.push(["_trackEvent", "Search", "Submission", b]), setTimeout(function () {
                    a.submit()
                }, 100)) : a.submit(), !1
            }
        },
        bindHandlers: function () {
            var a = this;
            $(".caption").on("click", function (b) {
                return b.preventDefault(), a.events.carouselClick(this), !1
            }), $(".cta").on("click", function (b) {
                return b.preventDefault(), a.events.ctaClick(this), !1
            }), $("#Timeline article.entry a").on("click", function (b) {
                return b.preventDefault(), a.events.timelineClick(this), !1
            })
        }
    },
    mobileLinks: {
        active: !1,
        init: function () {
            var a = this;
            a.active = !0, a.$links = $(), a.$links = a.$links.add(".block-link"), a.$links.each(function () {
                var a = $(this),
                    b = $();
                a.on("click", function (a) {
                    return a.preventDefault(), !1
                }), a.find(".read-more").length ? b = a.find(".read-more") : a.find(".btn").length && (b = a.find(".btn")), b.on("click", function () {
                    "undefined" != typeof _gaq && (a.hasClass("cta") || a.hasClass("caption")) ? a.hasClass("cta") ? site.analytics.events.ctaClick(a[0]) : a.hasClass("caption") && site.analytics.events.carouselClick(a[0]) : window.location = a.attr("href")
                })
            })
        }
    }
};
site.Video = function () {
    this.playing = !1
}, site.Video.prototype = {
    constructor: site.Video,
    instances: [],
    init: function (a) {
        var b = this;
        b.$video = a, b.id = a.find("video")[0].id, b.$playPause = b.$video.find(".play-pause"), b.$overlay = b.$video.find(".overlay"), b.$poster = b.$video.find(".image"), b.$caption = b.$video.find(".caption"), b.$scrubber = b.$video.find(".total"), b.$buffered = b.$video.find(".buffered"), b.$current = b.$video.find(".current"), b.$elapsed = b.$video.find(".elapsed"), b.$dur = b.$video.find(".dur"), b.$fullscreen = b.$video.find(".full-screen"), b.$volume = b.$video.find(".volume"), b.$volScrubber = b.$volume.find(".sensor"), b.player = null, $.getScript(nygc.templateURL + "/js/video.dev.min.js", function () {
            videojs(b.id, {
                controls: !1
            }).ready(function () {
                b.$video.removeClass("loading"), b.player = this, b.bindHandlers()
            })
        })
    },
    bindHandlers: function () {
        var a = this,
            b = !1;
        a.$overlay.add(a.$playPause).on("click", function () {
            a.playing ? a.pause() : a.play()
        }), a.$video.on("mousemove", function () {
            a.playing && (clearInterval(a.timeout), a.$video.addClass("show-controls"), a.hideControls())
        }), a.player.on("loadedmetadata", function () {
            a.renderTime(), a.renderVol()
        }), a.player.on("ended", function () {
            a.pause(), a.$video.removeClass("video-mode show-controls")
        }), a.$fullscreen.on("click", function () {
            a.player.requestFullScreen()
        }), a.$scrubber.on({
            click: function (b) {
                var c = a.$scrubber.width(),
                    d = (b.originalEvent.offsetX || b.pageX - a.$scrubber.offset().left) / c;
                a.seek(d)
            },
            mousedown: function (a) {
                a.originalEvent.preventDefault(), b = !0, site.$window.on("mouseup.scrub", function () {
                    b = !1, site.$window.off("mouseup.scrub")
                })
            },
            mousemove: function (c) {
                if (b) {
                    var d = a.$scrubber.width(),
                        e = (c.originalEvent.offsetX || c.pageX - a.$scrubber.offset().left) / d;
                    e = e > 1 ? 1 : 0 > e ? 0 : e, a.seek(e)
                }
            }
        }), a.$volScrubber.on({
            click: function (b) {
                a.parseVol(b)
            },
            mousedown: function (a) {
                a.originalEvent.preventDefault(), b = !0, site.$window.on("mouseup.scrub", function () {
                    b = !1, site.$window.off("mouseup.scrub")
                })
            },
            mousemove: function (c) {
                b && a.parseVol(c)
            }
        })
    },
    parseVol: function (a) {
        var b = this,
            c = 40,
            d = (a.originalEvent.offsetX || a.pageX - b.$volScrubber.offset().left) - 18,
            e = 0 > d ? 0 : d > 40 ? 40 : d,
            f = e / c;
        b.player.volume(f), b.renderVol(f)
    },
    play: function () {
        var a = this,
            b = a.player.currentSrc();
        $.each(a.instances, function () {
            this.pause()
        }), a.$video.addClass("video-mode playing show-controls"), a.playing = !0, a.player.play(), a.loop = setInterval(function () {
            a.renderTime()
        }, 1e3 / 60), a.renderVol(), a.hideControls(), site.analytics.events.videoPlay(b)
    },
    pause: function () {
        var a = this;
        a.$video.removeClass("playing"), clearInterval(a.timeout), clearInterval(a.loop), a.$video.addClass("show-controls"), a.playing = !1, a.player.pause()
    },
    hideControls: function () {
        var a = this;
        a.timeout = setTimeout(function () {
            a.$video.removeClass("show-controls")
        }, 3e3)
    },
    renderTime: function () {
        var a = this;
        a.playbackData = {
            duration: vidDur || a.player.duration(),
            totalTime: a.formatTime(vidDur),
            currentTime: a.formatTime(a.player.currentTime()),
            currentPercent: a.player.currentTime() / vidDur * 100,
            bufferedPercent: a.player.buffered().end(0) / vidDur * 100
        }, a.$dur.text(a.playbackData.totalTime), a.$elapsed.text(a.playbackData.currentTime), a.$buffered.css("width", a.playbackData.bufferedPercent + "%"), a.$current.css("width", a.playbackData.currentPercent + "%")
    },
    renderVol: function (a) {
        var b = this,
            c = a || b.player.volume(),
            d = 1 / 6;
        switch ($bars = b.$volume.find(".bar"), b.$volume.removeClass("mute"), $bars.removeClass("on"), !0) {
        case 0 == c:
            b.$volume.addClass("mute");
            break;
        case d > c:
            $bars.slice(0, 1).addClass("on");
            break;
        case 2 * d > c:
            $bars.slice(0, 2).addClass("on");
            break;
        case 3 * d > c:
            $bars.slice(0, 3).addClass("on");
            break;
        case 4 * d > c:
            $bars.slice(0, 4).addClass("on");
            break;
        case 5 * d > c:
            $bars.slice(0, 5).addClass("on");
            break;
        default:
            $bars.slice(0, 6).addClass("on")
        }
    },
    seek: function (a) {
        var b = this,
            c = vidDur * a;
        b.player.currentTime(c), b.renderTime()
    },
    formatTime: function (a, b) {
        var c = Math.floor(a / 60 / 60),
            d = Math.floor(a / 60 % 60),
            e = Math.floor(a % 60),
            f = b ? 1e3 * (a - Math.floor(a)).toFixed(3) : !1,
            g = (1 > c ? "" : c + ":") + (10 > d ? "0" + d : d) + ":" + (10 > e ? "0" + e : e) + (f ? "." + f : "");
        return g
    }
}, $(function () {
    if (FastClick.attach(document.body), site.platform(), site.header.init(), $("#Home").length && site.home.init(), ($("#SinglePerson").length || $("#SinglePost").length) && site.helpers.highlightActive(), $("#EventsList").length && site.events.init(), $("#ContactForm").length && site.contactForm.init(), site.touch && site.mobileLinks.init(), "undefined" != typeof _gaq && site.analytics.init(), $("#Video").length) {
        var a = new site.Video;
        a.init($("#Video"))
    }
    $("#Timeline").length && $("#Timeline div.video").each(function () {
        var a = new site.Video;
        site.Video.prototype.instances.push(a), a.init($(this))
    })
}), Date.prototype.yyyymmdd = function () {
    var a = this.getFullYear().toString(),
        b = (this.getMonth() + 1).toString(),
        c = this.getDate().toString();
    return a + (b[1] ? b : "0" + b[0]) + (c[1] ? c : "0" + c[0])
};

$(function () {
    $(".scrollwrapper .slider_video").not(":first").not(":last").attr({
        autoplay: "true"
    });

})